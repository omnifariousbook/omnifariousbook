7z:
  - use this tool to extract zip file with password, when we have password.


binwalk:
   - Binwalk is a tool that allows you to search binary images for embedded files and executable code. like some image file binary contain zip file in it so we can use this tool to check or obtain it.
   -e extract
   - example: binwalk <file>
   - example: binwalk -e <file> (use to extract something)


exiftool:
   - use for inventigate the image, which can provide us with meta data
   - example: exiftool <file>


fcrackzip:
	- use for cracking lock zip


ffuf:
- tools like dirb or dirbuster
- w option is a wordlist
- u option is target url
- example: ffuf -w <path to wordlist:FUZZ> -u http://<ip>/FUZZ


hydra:
	- use for bruteforce ssh, ftp, etc
	-l is login or user name
	-P password
	-t run TASKS number of connects in parallel (default: 16)
	-v / -V verbose mode / show login+pass combination for each attempt
	example1: hydra -l root -P rockyou.txt ssh://<ip>:<port> -t 4 -V
	example2: hydra -l '' -P 3digits.txt -f -v MACHINE_IP http-post-form "/login.php:pin=^PASS^:Access denied" -s 8000
	- for example2 we have to look at the html
	part of the html:
<body class="bg-thm text-white">
  <div class="flex items-center justify-center min-h-screen w-full max-w-xl mx-auto">
    <form method="post" action="login.php" class="grid grid-cols-3 max-w-lg mx-auto bg-thm-900 p-4 font-mono">
      <input type="hidden" name="pin" />

	1.The method is post
	2.The PIN code value is sent with the name pin
In other words, the main login page <url> receives the input from the user and sends it to /login.php using the name pin

	-l '' indicates that the login name is blank as the security lock only requires a password
	-P 3digits.txt specifies the password file to use
	-f stops Hydra after finding a working password
	-v provides verbose output and is helpful for catching errors
	MACHINE_IP is the IP address of the target
	http-post-form specifies the HTTP method to use
	"/login.php:pin=^PASS^:Access denied" has three parts separated by :
	/login.php is the page where the PIN code is submitted
	pin=^PASS^ will replace ^PASS^ with values from the password list
	Access denied indicates that invalid passwords will lead to a page that contains the text “Access denied”
	-s 8000 indicates the port number on the target


john
  - for cracking hash


nikto(scan web):
	-h is host	
	example for normal scan: nikto -h http://10.0.2.15


nmap:
	-T<value 1-5> to determind speed
	-p <port> is port -p- mean all port
	-A all or everything
	-when scan udp don't put -A and -p- because it take time to scan
	-sn option is for ping scan. ex: nmap -sn 10.0.2.0/24 (to find active machines)
	example for normal scan: nmap -T3 -p- -A 10.0.2.15
	example for ping scan (to find active machines): nmap -sn 10.0.2.0/24


scp:
  - when succeed in ssh into user and want to get a file from that user use this tool to get it.
example: sudo scp <user>@<ip>:<file> <location you want to put file>
  - we can also use it for sending a file to a user after we get ssh into user.
example: sudo scp <file you want to send> <user>@<ip>:<localtion you want to put file>
  - and when you upload file if permission denied then use /dev/shm dir to put your file


steghide:
  - use this tool to find hidden files in image/audio files. but we need passphrase because most file will have that so we have to find it first.
  - example: steghide extract -sf <file>


xxd:
  - use to dump file into hax format
  - example: xxd <file>


zip2john:
  - you can use this to crack lock zip or lock file in zip which when we extract normally it have no content. this tool will turn lock zip for file into hash format that john can understand then we can use john to crack it.
  - example: john2zip <file> > hash.txt (turn zip or file into hash)
  - example: john hash.txt (use the hash that we extract to crack with john)


ssh2john:
  - use this when you have ssh rsa file but it need a phrase password so you can use this tool to turn the rsa file into hash for john to crack.
  - example: ssh2john <file>


crunch:
  - use to generate list of password or username or anything
  - example: crunch 3 3 0123456789ABCDEF -o file.txt
  - 3 the first number is the minimum length of the generated password
  - 3 the second number is the maximum length of the generated password
  - 0123456789ABCDEF is the character set to use to generate the passwords
  -o 3digits.txt saves the output to the 3digits.txt file

cewl:
  - is a custom word list generator tool that spiders websites to create word lists based on the site's content
  - example: cewl http://<ip>
  - exmaple for generating passwords: cewl -d 2 -m 5 -w passwords.txt <url> --with-numbers
  - The -d option allows you to set how deep CeWL should spider.
  -m minimum
  -x maximum
  -w write the output to the file
  --with-numbers option will append numbers to words, and using --extension allows you to append custom extensions to each word, making it useful for directory or file brute-forcing
  - example for generating username: cewl -d 0 -m 5 -w usernames.txt <url> --lowercase

wfuzz:
  - s a tool designed for brute-forcing web applications. It can be used to find resources not linked directories, servlets, scripts, etc, brute-force GET and POST parameters for checking different kinds of injections (SQL, XSS, LDAP), brute-force forms parameters (user/password) and fuzzing
  - example wfuzz -c -z file,usernames.txt -z file,passwords.txt --hs "Please enter the correct credentials" -u http://MACHINE_IP/login.php -d "username=FUZZ&password=FUZ2Z"
  -z file,usernames.txt loads the usernames list.
  -z file,passwords.txt uses the password list generated by CeWL.
  --hs "Please enter the correct credentials" hides responses containing the string "Please enter the correct credentials", which is the message displayed for wrong login attempts.
  -u specifies the target URL.
  -d "username=FUZZ&password=FUZ2Z" provides the POST data format where FUZZ will be replaced by usernames and FUZ2Z by passwords

gpg2john:
	- use this to convert asc which is the key to the pgp file and crack with johntheripper


